<Activity mc:Ignorable="sap sap2010" x:Class="BankReportDownload" this:BankReportDownload.in_ProcessingDate="2021-06-22" this:BankReportDownload.in_BankReportFilePath="C:\Users\Anju.CP\Documents\FNP001\Files_ALJM_FN_P001 Recording and clearing of collection from EFC type customers\ALJR EFC Sales Report (FULL)-.xlsx" this:BankReportDownload.in_BankReportSheetName="ALJR EFC Sales Report" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_BankName" Type="InArgument(x:String)" />
    <x:Property Name="in_dt_EFCSalesReport" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_ProcessingDate" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_BankReportFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_BankReportSheetName" Type="InArgument(x:String)" />
    <x:Property Name="in_RegexPattern" Type="InArgument(x:String)" />
    <x:Property Name="in_index" Type="InArgument(x:Int32)" />
  </x:Members>
  <this:BankReportDownload.in_RegexPattern>
    <InArgument x:TypeArguments="x:String" />
  </this:BankReportDownload.in_RegexPattern>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>942,1390</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>BankReportDownload_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Invoice Settlement " sap:VirtualizedContainerService.HintSize="462,1325" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_InvoiceSettlement" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BuildDataTable sap2010:Annotation.AnnotationText="Data Table : Used for creation of EFC Full report. &#xA;and Created from various bank statements downloaded from SAP. " DataTable="[dt_InvoiceSettlement]" DisplayName="Build Data Table Invoice Settlement Data Table" sap:VirtualizedContainerService.HintSize="400,117" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Customer&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Purchase_x0020_Order&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Settlement_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Credit_x0020_Amount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:double&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Invoice_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Bank_x0020_Ref._x0020__x0028_Assignment_x0029_&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Remarks&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;GL&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BuildDataTable>
    <Sequence DisplayName="Generate Invoice Settlement for Bank" sap:VirtualizedContainerService.HintSize="400,1057" sap2010:WorkflowViewState.IdRef="Sequence_25">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dt_BankStatement" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message Generate Invoice Settlement forBank Start" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Generate Invoice Settlement for : &quot; +in_BankName+&quot; Start&quot;]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Read Bank Name" sap:VirtualizedContainerService.HintSize="496,551" sap2010:WorkflowViewState.IdRef="Sequence_27">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="434,440" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="None" WorkbookPath="[in_BankReportFilePath]">
                <ueab:ExcelApplicationCard.Body>
                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,171" sap2010:WorkflowViewState.IdRef="Sequence_26">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_BankStatement]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" SheetName="[in_BankReportSheetName]">
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                      </ui:ExcelReadRange>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelApplicationCard.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:ExcelApplicationCard>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelProcessScopeX>
      <ui:FilterDataTable DataTable="[dt_BankStatement]" DisplayName="Filter Data Table PO Filter" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="338,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dt_BankStatement]" SelectColumnsMode="Remove">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="8">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Text"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["PO"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Text"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["LD"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Text"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["Paid invoice"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Text"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["TRANSFER"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Text"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["Payment to Deale"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="Or" Operator="CONTAINS">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Text"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["AUTO LEASE"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <ui:LogMessage DisplayName="Log Message Filter Bank Data Table Count" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Filter Bank Statement Report Datatable Row Count: &quot;+dt_BankStatement.RowCount.ToString]" />
      <ui:InvokeCode ContinueOnError="{x:Null}" Code="Try&#xD;&#xA;&#xD;&#xA;For Each row As DataRow In in_dt_BankStatement.Rows&#xD;&#xA;    ' Extract data using regex&#xD;&#xA;    Dim inputText As String =if(in_BankName.tostring.ToLower.Equals(&quot;ryd&quot;),row(&quot;Assignment&quot;).ToString(),row(&quot;Text&quot;).ToString())&#xD;&#xA;    Dim regexMatch As Match = System.Text.RegularExpressions.Regex.Match(inputText, regexPattern)&#xD;&#xA;    Dim ExtractedPO As String = &quot;&quot;&#xD;&#xA;&#xD;&#xA;    If regexMatch.Success Then&#xD;&#xA;        ExtractedPO = regexMatch.Value&#xD;&#xA;&#x9;&#x9;Console.WriteLine(ExtractedPO)&#xD;&#xA;    End If&#xD;&#xA;     'Extract data from bank statement &#xD;&#xA;&#x9; Dim CreditAmount =If((row(&quot;Amount in local currency&quot;)),Math.Abs(CDbl( row(&quot;Amount in local currency&quot;))))&#xD;&#xA;     Dim InvoiceDate = (From Erow In in_dt_EFCSalesReport.AsEnumerable()&#xD;&#xA;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Where Erow(&quot;Purchase Order&quot;).Equals(ExtractedPO.ToString)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Select Erow(&quot;Invoice Date&quot;)).FirstOrDefault()&#xD;&#xA;&#x9;&#xD;&#xA;    ' Write extracted data to dt_output DataTable&#xD;&#xA;    Dim newRow As DataRow = out_dt_InvoiceSettlement.NewRow()&#xD;&#xA;    newRow(&quot;Purchase Order&quot;) = ExtractedPO&#xD;&#xA;&#x9;newRow(&quot;Customer&quot;)= in_BankName&#xD;&#xA;&#x9;newRow(&quot;Settlement Date&quot;) = in_ProcessingDate.ToString(&quot;dd-MMM-yyyy&quot;)&#xD;&#xA;&#x9;newRow(&quot;Credit Amount&quot;) = math.Abs(Cdbl(CreditAmount))&#xD;&#xA;&#x9;newRow(&quot;Invoice Date&quot;) = CDate(InvoiceDate).ToString(&quot;dd-MMM-yyyy&quot;)&#xD;&#xA;&#x9;newRow(&quot;Bank Ref. (Assignment)&quot;)= row(&quot;Assignment&quot;)&#xD;&#xA;    out_dt_InvoiceSettlement.Rows.Add(newRow)&#xD;&#xA;Next&#xD;&#xA;Catch err As Exception&#xD;&#xA;&#x9;Console.WriteLine(err.Message)&#xD;&#xA;    Throw (err)&#xD;&#xA;End Try" DisplayName="Invoke Code Invoice Settlemet" sap:VirtualizedContainerService.HintSize="338,165" sap2010:WorkflowViewState.IdRef="InvokeCode_8">
        <ui:InvokeCode.Arguments>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_EFCSalesReport">[in_dt_EFCSalesReport]</InArgument>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_BankStatement">[dt_BankStatement]</InArgument>
          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_InvoiceSettlement">[dt_InvoiceSettlement]</InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="regexPattern">[in_RegexPattern]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[in_BankName]</InArgument>
          <InArgument x:TypeArguments="s:DateTime" x:Key="in_ProcessingDate">[in_ProcessingDate]</InArgument>
        </ui:InvokeCode.Arguments>
      </ui:InvokeCode>
      <If Condition="[in_index =1]" DisplayName="If index is 1" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Write Header Text" sap:VirtualizedContainerService.HintSize="400,227" sap2010:WorkflowViewState.IdRef="Sequence_28">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_InvoiceSettlement]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="338,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="InvoiceSettlemet" WorkbookPath="D:\ALJKSA\ALJR_Robot\ALJKSA_FIN_ALJR_P001_EFC_Settlement\2023_05_25\Work\InvoiceSettlemetResult.xlsx" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Write Data Table Without Header" sap:VirtualizedContainerService.HintSize="441,224" sap2010:WorkflowViewState.IdRef="Sequence_29">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Write To Output Data Table" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflows\InvoiceSettlement\WriteDatatableToExcelFile.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_InputExcelFile">D:\ALJKSA\ALJR_Robot\ALJKSA_FIN_ALJR_P001_EFC_Settlement\2023_05_25\Work\InvoiceSettlemetResult.xlsx</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_InputsheetName">InvoiceSettlemet</InArgument>
                <InArgument x:TypeArguments="sd:DataTable" x:Key="in_WriteDataTable">[dt_InvoiceSettlement]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Else>
      </If>
      <ui:LogMessage DisplayName="Log Message Generate Invoice Settlement forBank Completed" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Generate Invoice Settlement for : &quot; +in_BankName+&quot; Completed&quot;]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
  </Sequence>
</Activity>